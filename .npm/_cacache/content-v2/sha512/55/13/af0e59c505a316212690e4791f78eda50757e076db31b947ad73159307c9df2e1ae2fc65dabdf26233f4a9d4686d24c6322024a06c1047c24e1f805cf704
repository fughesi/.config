{"_id":"int64-buffer","_rev":"15-e04f28da9ae738d52375a2f1dfa70f0f","name":"int64-buffer","dist-tags":{"latest":"1.1.0"},"versions":{"0.1.0":{"name":"int64-buffer","version":"0.1.0","keywords":["64bit","IEEE-754","buffer","int","int64","integer","long","longlong","signed","uint64","unsinged"],"author":{"name":"@kawanet"},"license":"MIT","_id":"int64-buffer@0.1.0","maintainers":[{"name":"kawanet","email":"u-suke@kawa.net"}],"homepage":"https://github.com/kawanet/int64-buffer","bugs":{"url":"https://github.com/kawanet/int64-buffer/issues"},"dist":{"shasum":"8740b02ead56b0c375884635bde54db1dee17f4a","tarball":"https://registry.npmjs.org/int64-buffer/-/int64-buffer-0.1.0.tgz","integrity":"sha512-B5XpePfPnL5so57V+GT9awdXJjjiB1AwVCaNISORD6YHOX+A/HtwaDVy2u+mRId6pHyK4LcgcRUr8749ECbf5A==","signatures":[{"sig":"MEQCICdsd7uIlJbAHh5tUpJZmy9S1k6kS0ZPcuEkWIXJzR7pAiB055iCrDlD3kuKEyWdfVNQ8CWlwqLrSx20RwuOLTw/LA==","keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA"}]},"main":"int64-buffer.js","_from":".","_shasum":"8740b02ead56b0c375884635bde54db1dee17f4a","gitHead":"4d94d34ea2449c1ee79500cf5bc1ef4d2aac4b86","scripts":{"test":"make test"},"_npmUser":{"name":"kawanet","email":"u-suke@kawa.net"},"repository":{"url":"git+https://github.com/kawanet/int64-buffer.git","type":"git"},"_npmVersion":"2.13.3","description":"64bit Long Integer on Buffer/ArrayBuffer in Pure JavaScript","directories":{},"_nodeVersion":"3.3.0","jshintConfig":{"node":true,"undef":true,"globals":{"it":true,"window":true,"describe":true}},"devDependencies":{"zuul":"^3.4.0","mocha":"^2.3.0","jshint":"^2.8.0","uglify-js":"^2.4.24"}},"0.1.1":{"name":"int64-buffer","version":"0.1.1","keywords":["64bit","IEEE-754","buffer","int","int64","integer","long","longlong","signed","uint64","unsinged"],"author":{"name":"@kawanet"},"license":"MIT","_id":"int64-buffer@0.1.1","maintainers":[{"name":"kawanet","email":"u-suke@kawa.net"}],"homepage":"https://github.com/kawanet/int64-buffer","bugs":{"url":"https://github.com/kawanet/int64-buffer/issues"},"dist":{"shasum":"4026f3ca7fcc06eeb795ef8326441cd2f4f9eb42","tarball":"https://registry.npmjs.org/int64-buffer/-/int64-buffer-0.1.1.tgz","integrity":"sha512-1beMdLTFjKhUQWRmBdmV6GEKepLy31a//2CjDIsMrZtNhsIv/1x2DXYnWxNYgtBGrTUZs78QTccHF7I0vdxJXw==","signatures":[{"sig":"MEUCIELftHyTgaDQO0I9jSMDLaj8T8wG5wMc01Bm6L0VFOlHAiEAiO1BmxZGKIr5aUl9Eu0pW8bIyPoly1Dr923TVPedZ4E=","keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA"}]},"main":"int64-buffer.js","_from":".","_shasum":"4026f3ca7fcc06eeb795ef8326441cd2f4f9eb42","gitHead":"e9b75b3382ed7eed513771883f0c41b7c1b8ecea","scripts":{"test":"make test"},"_npmUser":{"name":"kawanet","email":"u-suke@kawa.net"},"repository":{"url":"git+https://github.com/kawanet/int64-buffer.git","type":"git"},"_npmVersion":"2.11.3","description":"64bit Long Integer on Buffer/ArrayBuffer in Pure JavaScript","directories":{},"_nodeVersion":"0.12.7","jshintConfig":{"node":true,"undef":true,"globals":{"it":true,"window":true,"describe":true}},"devDependencies":{"zuul":"^3.4.0","mocha":"^2.3.0","jshint":"^2.8.0","uglify-js":"^2.4.24"}},"0.1.4":{"name":"int64-buffer","version":"0.1.4","keywords":["64bit","IEEE-754","buffer","int","int64","integer","long","longlong","signed","uint64","unsinged"],"author":{"name":"@kawanet"},"license":"MIT","_id":"int64-buffer@0.1.4","maintainers":[{"name":"kawanet","email":"u-suke@kawa.net"}],"homepage":"https://github.com/kawanet/int64-buffer","bugs":{"url":"https://github.com/kawanet/int64-buffer/issues"},"dist":{"shasum":"102f91ec4e9fdebe4609c4d4f54b44edbb02445b","tarball":"https://registry.npmjs.org/int64-buffer/-/int64-buffer-0.1.4.tgz","integrity":"sha512-0t6RoJGo/n9Dx84eReg6AeSCr1dd0ioJif8jhEBQKGC5ztJ05ZGuuBSZMk/WKpv8zqY+AIfwdAxu0rRiFBwaRQ==","signatures":[{"sig":"MEQCIC4jorLwd/Lt5DWhCUurVtWKkoIf3MgmF0it6RjEAPwVAiA0n2FT0heFqKcfIStph4az6N538Ka3osq8oTDvDozLVg==","keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA"}]},"main":"int64-buffer.js","_from":".","_shasum":"102f91ec4e9fdebe4609c4d4f54b44edbb02445b","gitHead":"9f66d0370c5cd67e590101ced522c412f7ee8d82","scripts":{"test":"make test"},"_npmUser":{"name":"kawanet","email":"u-suke@kawa.net"},"repository":{"url":"git+https://github.com/kawanet/int64-buffer.git","type":"git"},"_npmVersion":"2.14.9","description":"64bit Long Integer on Buffer/ArrayBuffer in Pure JavaScript","directories":{},"_nodeVersion":"0.12.9","jshintConfig":{"node":true,"undef":true,"unused":true,"globals":{"it":true,"window":true,"describe":true}},"devDependencies":{"zuul":"^3.10.1","mocha":"^2.4.5","jshint":"^2.9.1","uglify-js":"^2.6.2"},"_npmOperationalInternal":{"tmp":"tmp/int64-buffer-0.1.4.tgz_1460520767936_0.7886512926779687","host":"packages-12-west.internal.npmjs.com"}},"0.1.5":{"name":"int64-buffer","version":"0.1.5","keywords":["64bit","IEEE-754","arraybuffer","buffer","int","int64","int8array","integer","long","longlong","signed","uint64","unsinged"],"author":{"name":"@kawanet"},"license":"MIT","_id":"int64-buffer@0.1.5","maintainers":[{"name":"kawanet","email":"u-suke@kawa.net"}],"homepage":"https://github.com/kawanet/int64-buffer","bugs":{"url":"https://github.com/kawanet/int64-buffer/issues"},"dist":{"shasum":"8e8bbb9c98ca1c590fdcf90c45b48b1a1173d52e","tarball":"https://registry.npmjs.org/int64-buffer/-/int64-buffer-0.1.5.tgz","integrity":"sha512-ysptFqiW9hN5V9bTlvoYtGQFiIjz9ReMAOhlLhT68THrW/b0DlStY9F7gK7EtQ61/dULPe7snQpSDcKB0RjDMQ==","signatures":[{"sig":"MEUCIQDJA+XqinnTRkim/0GQNUfOx+cwoC59jeH3DTFzHICeEwIgS5quPgsz2l6FieIeSFaqbAETSpzFVBzLm/BDT6V0kTs=","keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA"}]},"main":"int64-buffer.js","_from":".","_shasum":"8e8bbb9c98ca1c590fdcf90c45b48b1a1173d52e","gitHead":"640acf5a37ff3d6617b8a0f6a5daf0e79f092649","scripts":{"test":"make test"},"_npmUser":{"name":"kawanet","email":"u-suke@kawa.net"},"repository":{"url":"git+https://github.com/kawanet/int64-buffer.git","type":"git"},"_npmVersion":"2.14.9","description":"64bit Long Integer on Buffer/Array/ArrayBuffer in Pure JavaScript","directories":{},"_nodeVersion":"0.12.9","jshintConfig":{"node":true,"undef":true,"unused":true,"globals":{"it":true,"window":true,"describe":true}},"devDependencies":{"zuul":"^3.10.1","mocha":"^2.4.5","jshint":"^2.9.1","uglify-js":"^2.6.2"},"_npmOperationalInternal":{"tmp":"tmp/int64-buffer-0.1.5.tgz_1460624240181_0.01920106285251677","host":"packages-16-east.internal.npmjs.com"}},"0.1.6":{"name":"int64-buffer","version":"0.1.6","keywords":["64bit","IEEE-754","arraybuffer","buffer","int","int64","int8array","integer","long","longlong","signed","uint64","unsinged"],"author":{"name":"@kawanet"},"license":"MIT","_id":"int64-buffer@0.1.6","maintainers":[{"name":"kawanet","email":"u-suke@kawa.net"}],"homepage":"https://github.com/kawanet/int64-buffer","bugs":{"url":"https://github.com/kawanet/int64-buffer/issues"},"dist":{"shasum":"40de28754b2a2a0de555074dfa360139d55dacbe","tarball":"https://registry.npmjs.org/int64-buffer/-/int64-buffer-0.1.6.tgz","integrity":"sha512-+NKN9Nv/XYf5fjVEBVfaaTk49d5JdLtgy2hz6zfPNMKlfV4ClFHx1nndx61ot8O7ZUkHjdSgeSb8n+J5lHayFg==","signatures":[{"sig":"MEYCIQC/z0i+6M18yjxgbrBWDL8QoVR54GbaJbHK3uKIiY1NpAIhAPos8iIWuC61GTmii8WvZbX/DpoYPiAvKqasNg/PCC74","keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA"}]},"main":"int64-buffer.js","_from":".","_shasum":"40de28754b2a2a0de555074dfa360139d55dacbe","gitHead":"84409523f0175b283571a7673b214196e42a481a","scripts":{"test":"make test"},"_npmUser":{"name":"kawanet","email":"u-suke@kawa.net"},"repository":{"url":"git+https://github.com/kawanet/int64-buffer.git","type":"git"},"_npmVersion":"2.14.9","description":"64bit Long Integer on Buffer/Array/ArrayBuffer in Pure JavaScript","directories":{},"_nodeVersion":"0.12.9","jshintConfig":{"node":true,"undef":true,"unused":true,"globals":{"it":true,"window":true,"describe":true}},"devDependencies":{"zuul":"^3.10.1","mocha":"^2.4.5","jshint":"^2.9.2","uglify-js":"^2.6.2"},"_npmOperationalInternal":{"tmp":"tmp/int64-buffer-0.1.6.tgz_1461300906236_0.796735658776015","host":"packages-12-west.internal.npmjs.com"}},"0.1.7":{"name":"int64-buffer","version":"0.1.7","keywords":["64bit","IEEE-754","arraybuffer","buffer","int","int64","int8array","integer","long","longlong","signed","uint64","unsinged"],"author":{"name":"@kawanet"},"license":"MIT","_id":"int64-buffer@0.1.7","maintainers":[{"name":"kawanet","email":"u-suke@kawa.net"}],"homepage":"https://github.com/kawanet/int64-buffer","bugs":{"url":"https://github.com/kawanet/int64-buffer/issues"},"dist":{"shasum":"f7f351ba369c70689e598c00c6806c0f51c02e81","tarball":"https://registry.npmjs.org/int64-buffer/-/int64-buffer-0.1.7.tgz","integrity":"sha512-2UyTwrp1ZAMxF16yMe2MzlYRnUNqG+jbgASI7j+ISYcuS7yq2YIP03LC/Rrr2iDVcJHgWcZ7X+gKYvexqXA21w==","signatures":[{"sig":"MEQCIDd/o7vbygnLyfCEoJgU1vSem2ZHjx0A7MGvxayR9IWbAiBhd01HNoHVIW7L6GEe4buEHaWPlLU/7a7ow5YlJ/uG4w==","keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA"}]},"main":"int64-buffer.js","_from":".","_shasum":"f7f351ba369c70689e598c00c6806c0f51c02e81","gitHead":"5c28fee424c22fbc25439dbcf73329ce0dec0c8b","scripts":{"test":"make test","fixpack":"fixpack"},"typings":"int64-buffer.d.ts","_npmUser":{"name":"kawanet","email":"u-suke@kawa.net"},"repository":{"url":"git+https://github.com/kawanet/int64-buffer.git","type":"git"},"_npmVersion":"2.15.0","description":"64bit Long Integer on Buffer/Array/ArrayBuffer in Pure JavaScript","directories":{},"_nodeVersion":"0.12.13","jshintConfig":{"node":true,"undef":true,"unused":true,"globals":{"it":true,"window":true,"describe":true}},"devDependencies":{"zuul":"^3.10.1","mocha":"^2.5.3","jshint":"^2.9.2","uglify-js":"^2.6.2"},"_npmOperationalInternal":{"tmp":"tmp/int64-buffer-0.1.7.tgz_1465617971611_0.8973106010816991","host":"packages-12-west.internal.npmjs.com"}},"0.1.9":{"name":"int64-buffer","version":"0.1.9","keywords":["64bit","IEEE-754","arraybuffer","buffer","int","int64","int8array","integer","long","longlong","signed","uint64","unsinged"],"author":{"name":"@kawanet"},"license":"MIT","_id":"int64-buffer@0.1.9","maintainers":[{"name":"kawanet","email":"u-suke@kawa.net"}],"contributors":[{"name":"kawanet","email":"u-suke@kawa.net"},{"name":"pizza2code","email":"christopher.guinnup@jhuapl.edu"},{"name":"Jan Krems","email":"jan.krems@groupon.com"}],"homepage":"https://github.com/kawanet/int64-buffer","bugs":{"url":"https://github.com/kawanet/int64-buffer/issues"},"dist":{"shasum":"9e039da043b24f78b196b283e04653ef5e990f61","tarball":"https://registry.npmjs.org/int64-buffer/-/int64-buffer-0.1.9.tgz","integrity":"sha512-hTYImck2Z72PmEbnKi7zgRvpkeAHIK0ggY01l89GbglIx3B+BYt5Ef2ospIX/2W/cRaBFH99xL5VnWJQsavAtg==","signatures":[{"sig":"MEUCIQCmDWx11XHnH9Bo0d0yvIfht+ktNmiBl7NsjQ46BmnWiQIgas4g0OdxvtxQVhgRKqxUG+NWevcYtqc7/DnCyIAoo1c=","keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA"}]},"main":"int64-buffer.js","_from":".","_shasum":"9e039da043b24f78b196b283e04653ef5e990f61","gitHead":"1f838e3010a49f3ce989aed5d2fba24cc313cde6","scripts":{"test":"make test","fixpack":"fixpack"},"typings":"int64-buffer.d.ts","_npmUser":{"name":"kawanet","email":"u-suke@kawa.net"},"repository":{"url":"git+https://github.com/kawanet/int64-buffer.git","type":"git"},"_npmVersion":"2.14.9","description":"64bit Long Integer on Buffer/Array/ArrayBuffer in Pure JavaScript","directories":{},"_nodeVersion":"0.12.9","jshintConfig":{"node":true,"undef":true,"unused":true,"globals":{"it":true,"window":true,"describe":true}},"devDependencies":{"zuul":"^3.10.1","mocha":"^2.5.3","jshint":"^2.9.2","uglify-js":"^2.7.0"},"_npmOperationalInternal":{"tmp":"tmp/int64-buffer-0.1.9.tgz_1468077644961_0.69400281785056","host":"packages-16-east.internal.npmjs.com"}},"0.1.10":{"name":"int64-buffer","version":"0.1.10","keywords":["64bit","IEEE-754","arraybuffer","buffer","int","int64","int8array","integer","long","longlong","signed","uint64","unsinged"],"author":{"name":"@kawanet"},"license":"MIT","_id":"int64-buffer@0.1.10","maintainers":[{"name":"kawanet","email":"u-suke@kawa.net"}],"contributors":[{"name":"kawanet","email":"u-suke@kawa.net"},{"name":"pizza2code","email":"christopher.guinnup@jhuapl.edu"},{"name":"Jan Krems","email":"jan.krems@groupon.com"}],"homepage":"https://github.com/kawanet/int64-buffer","bugs":{"url":"https://github.com/kawanet/int64-buffer/issues"},"dist":{"shasum":"277b228a87d95ad777d07c13832022406a473423","tarball":"https://registry.npmjs.org/int64-buffer/-/int64-buffer-0.1.10.tgz","integrity":"sha512-v7cSY1J8ydZ0GyjUHqF+1bshJ6cnEVLo9EnjB8p+4HDRPZc9N5jjmvUV7NvEsqQOKyH0pmIBFWXVQbiS0+OBbA==","signatures":[{"sig":"MEUCIHfaDwe/wSZJAldAI3WciKp4msEIRLSzbrsE7iSteZOZAiEA/4seNI3Ud8HYMz8+n1YEzflUG/IbLnZVJxPMRJt+x2k=","keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA"}]},"main":"int64-buffer.js","_from":".","_shasum":"277b228a87d95ad777d07c13832022406a473423","gitHead":"22baa88b200b77b0e9c48f74e673752f655cba95","scripts":{"test":"make test","fixpack":"fixpack"},"typings":"int64-buffer.d.ts","_npmUser":{"name":"kawanet","email":"u-suke@kawa.net"},"repository":{"url":"git+https://github.com/kawanet/int64-buffer.git","type":"git"},"_npmVersion":"3.10.10","description":"64bit Long Integer on Buffer/Array/ArrayBuffer in Pure JavaScript","directories":{},"_nodeVersion":"6.11.1","jshintConfig":{"node":true,"undef":true,"unused":true,"globals":{"it":true,"window":true,"describe":true}},"devDependencies":{"zuul":"^3.11.1","mocha":"^4.0.1","jshint":"^2.9.5","uglify-js":"^3.1.10"},"_npmOperationalInternal":{"tmp":"tmp/int64-buffer-0.1.10.tgz_1512286033452_0.8047918069642037","host":"s3://npm-registry-packages"}},"0.99.1007":{"name":"int64-buffer","version":"0.99.1007","keywords":["64bit","IEEE-754","arraybuffer","buffer","int","int64","int8array","integer","long","longlong","signed","uint64","unsinged"],"author":{"name":"@kawanet"},"license":"MIT","_id":"int64-buffer@0.99.1007","maintainers":[{"name":"kawanet","email":"u-suke@kawa.net"}],"contributors":[{"name":"kawanet","email":"u-suke@kawa.net"},{"name":"pizza2code","email":"christopher.guinnup@jhuapl.edu"},{"name":"Jan Krems","email":"jan.krems@groupon.com"}],"homepage":"https://github.com/kawanet/int64-buffer","bugs":{"url":"https://github.com/kawanet/int64-buffer/issues"},"dist":{"shasum":"211ea089a2fdb960070a2e77cd6d17dc456a5220","tarball":"https://registry.npmjs.org/int64-buffer/-/int64-buffer-0.99.1007.tgz","fileCount":14,"integrity":"sha512-XDBEu44oSTqlvCSiOZ/0FoUkpWu/vwjJLGSKDabNISPQNZ5wub1FodGHBljRsrR0IXRPq7SslshZYMuA55CgTQ==","signatures":[{"sig":"MEYCIQDDP0oR5Ke+WQVNzcdG9Y1tM1z1vFBDiBTfE0FKV5KOggIhAIhHi6grS7fz0UM5n5E4HVKVHel0OZSHLG0/Uvk+sUE/","keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA"}],"unpackedSize":49873,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJbuf/HCRA9TVsSAnZWagAAHSgP/1ZIFK3BkZD0+Q6hXBx0\n+yADT8mZRRPr9ntypZG9PolYveuW0Ur20vkgSPjYQhxsGZ3ozYDgITYprew2\nPxfUiITdvccBBZxVLmYav/20OpmBJIZcFK95jWyA5Qk+sYIRXKb16a3pIUw9\n4DQN7gtb4b87UsTaL4zGhCn/KqwiP1BjNkupGqRS9njO4Kin3mNP4mQoz7ZB\nQpFCvpMA6Et+UVV4YGzUtyBiMNL5Yd6H3V2bx0sCIXw/esu0iQd8MDWzQzpj\nljhGyY1icHsCnQUV+UDFi0kcjoZkLY94iLxSiaIaVqASfpujcj7jBqx4HMxh\nT0ktW7Oue7vfJm+zhnGEy+bEsn9ob6U0zCvdZGZYnn4snhQXYx4OQ26qCK9o\ng1qijcKlbUQwnFIVUoJbPy/wXKursTP2e+GOSm3a6VHnVFQJ3gceVSpmAelU\nLcd1Qhs56P+cV3wSbv5ZCujZQOBmumDMMAwIg8TcQkz5Dca9mbkxXPQ06idX\n6WmK2oLOFhID+70upHHl3RsV1gPJLsH3tUJLDCdxIiLj43DzoQQgzqGRkHDD\nsbJFlEWLABuXAJLWpe5RUz57DH5/mSSBbgNulvu3enqG0FMNNIlNwL2Gcg3o\n2C1Cu7mXOsYrIRfXXvcLi4zAWMyQimMaC4Lppb5XRRsHHnzQv42qkGNWqB8R\nh/BU\r\n=XWzF\r\n-----END PGP SIGNATURE-----\r\n"},"main":"int64-buffer.js","engines":{"node":">= 4.5.0"},"gitHead":"59cabccda97f6b192781df520f7ae0987e3f4cfe","scripts":{"test":"make test","fixpack":"fixpack","coveralls":"nyc make test && ./node_modules/.bin/nyc report --reporter=text-lcov | ./node_modules/.bin/coveralls","test-browser-local":"make test-browser-local"},"typings":"int64-buffer.d.ts","_npmUser":{"name":"kawanet","email":"u-suke@kawa.net"},"repository":{"url":"git+https://github.com/kawanet/int64-buffer.git","type":"git"},"_npmVersion":"6.4.1","description":"64bit Long Integer on Buffer/Array/ArrayBuffer in Pure JavaScript","directories":{},"_nodeVersion":"10.11.0","jshintConfig":{"node":true,"undef":true,"unused":true,"globals":{"it":true,"window":true,"describe":true}},"_hasShrinkwrap":false,"devDependencies":{"nyc":"^13.0.1","zuul":"^3.12.0","mocha":"^5.2.0","jshint":"^2.9.6","coveralls":"^3.0.2","uglify-js":"^3.4.9","@types/node":"^10.11.4"},"_npmOperationalInternal":{"tmp":"tmp/int64-buffer_0.99.1007_1538916294108_0.7467498143615761","host":"s3://npm-registry-packages"}},"1.0.0":{"name":"int64-buffer","version":"1.0.0","keywords":["64bit","IEEE-754","arraybuffer","buffer","int","int64","int8array","integer","long","longlong","signed","uint64","unsinged"],"author":{"name":"@kawanet"},"license":"MIT","_id":"int64-buffer@1.0.0","maintainers":[{"name":"kawanet","email":"u-suke@kawa.net"}],"contributors":[{"name":"kawanet","email":"u-suke@kawa.net"},{"name":"pizza2code","email":"christopher.guinnup@jhuapl.edu"},{"name":"Jan Krems","email":"jan.krems@groupon.com"}],"homepage":"https://github.com/kawanet/int64-buffer","bugs":{"url":"https://github.com/kawanet/int64-buffer/issues"},"dist":{"shasum":"580068cdb411a11287e0f569a2ae7021414f2ce4","tarball":"https://registry.npmjs.org/int64-buffer/-/int64-buffer-1.0.0.tgz","fileCount":6,"integrity":"sha512-yD4sihjB6Puqlk7hL3Cz0/0C6dtueUcf70mUbgioNQacgi4+pkoC9t0TkRetHvm+zvajyb7WaJZ6Bq4Xax3nTQ==","signatures":[{"sig":"MEUCIQCJVJgF0Y4VkncBersN7Qvq+0wX9ETK5BTob7IapkYXGgIgEwJUKXh4wX9FvgjkS9a+UoIsTIdjIR1nmfXB2eccr+M=","keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA"}],"unpackedSize":22225,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.13\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJflGL6CRA9TVsSAnZWagAAo7sQAI/1QgG/0o8An8wSeuA0\nXJi17yPTTzUWkkSPiJHnAsIjLJftOWPgswQF2CLRKOP8iFg1DHfNGEQvyXAt\nSM42c54+lPawd/AT52rWVXE4Rdh5z4kMepYtA/dnSfx0Z0mwJ6EgPBbR7sAx\nJb1zoMtcDB+kT3ui6falawrIxjQekmaYIqSU0GJTj4b8tOomHp4E9uImbylF\nPbiXmOUEc7U7dfkVk+KMImMnM3LJI5MY+YBe/iUBNEk0I7hpxyazRNYVg4OP\nYtO69TjP8pe7UoXdaCreiee2uBCoy26HNvlr5w7BpSTuCLRxdyOaEZQE8B9i\nTB+7EKnO7CfD2xwvuS79Zg9UuTtfWHjkgfhkoEM8glUV2KEBbuCNGcfe9jqj\nMWb8nZf9rkeKTsh2p9NWqOfzW57vZ8rTzIBdmZtMSBvTfvrcgJD+Szj41nFh\ncnvyF0aVneWo6dycGYRIrk+wjvU/OuDn59dftrv2GEkncqk1wC7VLiyO/yRm\nJqDJ4ar1pHmyvCcvi2u2qVXVb93KpHq2wzRWVecmLJjhN9dq3JvR6vBXQkkQ\nVso/DtrAQh9Fvx3XkwoSEQqLREY+RTRPDY+0BNx7dpT6ggAoSEhiy/cZMy/u\n579pN0Ug3iZ6/RIF+r3YzHbL6sYPjFT3+AYH9PydXZ3MoJpBRvZxHgMnOa8w\nt5ol\r\n=jAY4\r\n-----END PGP SIGNATURE-----\r\n"},"main":"int64-buffer.js","engines":{"node":">= 4.5.0"},"gitHead":"51feb7fee8d06c447b4767bfa554f95d9364131c","scripts":{"test":"make test","fixpack":"fixpack","coveralls":"make test-coverage"},"typings":"int64-buffer.d.ts","_npmUser":{"name":"kawanet","email":"u-suke@kawa.net"},"repository":{"url":"git+https://github.com/kawanet/int64-buffer.git","type":"git"},"_npmVersion":"6.14.8","description":"64bit Long Integer on Buffer/Array/ArrayBuffer in Pure JavaScript","directories":{},"_nodeVersion":"14.14.0","jshintConfig":{"node":true,"undef":true,"unused":true,"globals":{"it":true,"window":true,"describe":true}},"_hasShrinkwrap":false,"devDependencies":{"nyc":"^15.1.0","mocha":"^8.2.0","jshint":"^2.12.0","terser":"^5.3.8","coveralls":"^3.1.0","@types/node":"^14.14.2"},"_npmOperationalInternal":{"tmp":"tmp/int64-buffer_1.0.0_1603560185661_0.4437903329368367","host":"s3://npm-registry-packages"}},"1.0.1":{"name":"int64-buffer","version":"1.0.1","keywords":["64bit","IEEE-754","arraybuffer","buffer","int","int64","int8array","integer","long","longlong","signed","uint64","unsinged"],"author":{"name":"@kawanet"},"license":"MIT","_id":"int64-buffer@1.0.1","maintainers":[{"name":"kawanet","email":"u-suke@kawa.net"}],"contributors":[{"name":"kawanet","email":"u-suke@kawa.net"},{"name":"pizza2code","email":"christopher.guinnup@jhuapl.edu"},{"name":"Jan Krems","email":"jan.krems@groupon.com"}],"homepage":"https://github.com/kawanet/int64-buffer","bugs":{"url":"https://github.com/kawanet/int64-buffer/issues"},"dist":{"shasum":"c78d841b444cadf036cd04f8683696c740f15dca","tarball":"https://registry.npmjs.org/int64-buffer/-/int64-buffer-1.0.1.tgz","fileCount":6,"integrity":"sha512-+3azY4pXrjAupJHU1V9uGERWlhoqNswJNji6aD/02xac7oxol508AsMC5lxKhEqyZeDFy3enq5OGWXF4u75hiw==","signatures":[{"sig":"MEQCICrXT6/AudO8VjZjPl8Ns2zO4t0yRy6ZceO303TKJFexAiAgOt9db8jlVzjksEhVR+nreyJsPLHX7Yv/l7tOiaJsig==","keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA"}],"unpackedSize":22224,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.13\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJgiVqUCRA9TVsSAnZWagAAaEQQAI4AJ357ctCcmGfr5+qQ\ndLb60VBaznJdB5aSq9rys+ID0vXA3Kh1I+lx+nmBRjarXK0OEqFsb5qlYPPG\nS7AXLswYg48Bl7LZW/X8GU80i0hKZmbTEEgLcf2S5+GrPmBTwWkrk9XuFxCL\nUIH1lIi2qoMIzQfvb93K7hp5zTGT5qJQE6fmuMj/8RTgurYbVSfL9H8Lx9ik\nzPN7umU0cS1q7AgurRu/EDbTdB/tdYiqMBNmiD/0UuQ/JoMv1FSOCdGfQSnM\nGQwKHhB+xo9Wo61+W7c4CoAUy21184UmGAUo9eSps0fBh/DGrqh+ZL9pn2Qp\noTYwQJ5FR/VKWVg0afapWCnOMDXygrPAsNVXmB6TGewAgO/M5MaIxlswWG1/\nUkXR3qVRy/gAnDm1l2Z4ljOKEC1FjSQkmD7sYXV6hGdUFVHDUOShMNl/7IiT\npPriRmobjFkAaUHnv+/QNK3VFFCjilCIgkPweHDeqe/lb0zL0jUGdGDoqGVo\nh8OVL27DUbvjaIoCrlAbCvLzu1e7gYstNegGxv1+JVCB4enTCi8tNJ+cXidG\nMrf47P1JLRO9Mde2wGrbIjhM3Ve5g1Xqs8W/RgF5TOdM4x93TmTSB4eGWNnK\n5VrB+nljHmESRGQanEyn/F3YV7mxnrjEIDjgZmrZzYENcopuAzbDfixA6Qz/\nEs0R\r\n=Fkqf\r\n-----END PGP SIGNATURE-----\r\n"},"main":"int64-buffer.js","engines":{"node":">= 4.5.0"},"gitHead":"97537080a9dba87d5b75c94d1ccc35a21a5188fe","scripts":{"test":"make test","fixpack":"fixpack","coveralls":"make test-coverage"},"typings":"int64-buffer.d.ts","_npmUser":{"name":"kawanet","email":"u-suke@kawa.net"},"repository":{"url":"git+https://github.com/kawanet/int64-buffer.git","type":"git"},"_npmVersion":"6.14.12","description":"64bit Long Integer on Buffer/Array/ArrayBuffer in Pure JavaScript","directories":{},"_nodeVersion":"14.16.1","jshintConfig":{"node":true,"undef":true,"unused":true,"globals":{"it":true,"window":true,"describe":true}},"_hasShrinkwrap":false,"devDependencies":{"nyc":"^15.1.0","mocha":"^8.3.2","jshint":"^2.12.0","terser":"^5.7.0","coveralls":"^3.1.0","@types/node":"^14.14.43"},"_npmOperationalInternal":{"tmp":"tmp/int64-buffer_1.0.1_1619614355853_0.9281172093965269","host":"s3://npm-registry-packages"}},"1.1.0":{"name":"int64-buffer","description":"64bit Long Integer on Buffer/Array/ArrayBuffer in Pure JavaScript","version":"1.1.0","author":{"name":"@kawanet"},"bugs":{"url":"https://github.com/kawanet/int64-buffer/issues"},"contributors":[{"name":"kawanet","email":"u-suke@kawa.net"},{"name":"pizza2code","email":"christopher.guinnup@jhuapl.edu"},{"name":"Jan Krems","email":"jan.krems@groupon.com"}],"devDependencies":{"@types/node":"^22.10.2","coveralls":"^3.1.1","jshint":"^2.13.6","mocha":"^11.0.1","nyc":"^17.1.0","terser":"^5.37.0"},"exports":{"types":"./int64-buffer.d.ts","import":"./int64-buffer.mjs","require":"./int64-buffer.js"},"homepage":"https://github.com/kawanet/int64-buffer","jshintConfig":{"globals":{"describe":true,"it":true,"window":true},"node":true,"undef":true,"unused":true},"keywords":["64bit","IEEE-754","arraybuffer","buffer","int","int64","int8array","integer","long","longlong","signed","uint64","unsinged"],"license":"MIT","main":"int64-buffer.js","repository":{"type":"git","url":"git+https://github.com/kawanet/int64-buffer.git"},"scripts":{"build":"make","coveralls":"make test-coverage","fixpack":"fixpack","prepack":"make clean all test","test":"make test"},"type":"commonjs","typings":"int64-buffer.d.ts","_id":"int64-buffer@1.1.0","gitHead":"c85417c13d2690153ff8181660aa6da7462c85a7","_nodeVersion":"22.12.0","_npmVersion":"10.9.0","dist":{"integrity":"sha512-94smTCQOvigN4d/2R/YDjz8YVG0Sufvv2aAh8P5m42gwhCsDAJqnbNOrxJsrADuAFAA69Q/ptGzxvNcNuIJcvw==","shasum":"7ebe9822196a93bbedf93ec6b73b569561b5ae3a","tarball":"https://registry.npmjs.org/int64-buffer/-/int64-buffer-1.1.0.tgz","fileCount":7,"unpackedSize":31487,"signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEYCIQDDDRlPQSYR7gYmR8E04G4VB/LGjcFdaxFhhmD58NcL5wIhAPfN9KbvhPyEwnywHiOaSlMnjZzmuQqlk1QYHRVw/HuX"}]},"_npmUser":{"name":"kawanet","email":"u-suke@kawa.net"},"directories":{},"maintainers":[{"name":"kawanet","email":"u-suke@kawa.net"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages-npm-production","tmp":"tmp/int64-buffer_1.1.0_1734246284918_0.3643914300651594"},"_hasShrinkwrap":false}},"time":{"created":"2015-09-05T16:16:49.129Z","modified":"2024-12-15T07:04:45.287Z","0.1.0":"2015-09-05T16:16:49.129Z","0.1.1":"2015-09-07T14:16:53.743Z","0.1.4":"2016-04-13T04:12:48.367Z","0.1.5":"2016-04-14T08:57:23.397Z","0.1.6":"2016-04-22T04:55:06.695Z","0.1.7":"2016-06-11T04:06:12.245Z","0.1.9":"2016-07-09T15:20:47.853Z","0.1.10":"2017-12-03T07:27:13.541Z","0.99.1007":"2018-10-07T12:44:54.286Z","1.0.0":"2020-10-24T17:23:05.802Z","1.0.1":"2021-04-28T12:52:36.012Z","1.1.0":"2024-12-15T07:04:45.091Z"},"bugs":{"url":"https://github.com/kawanet/int64-buffer/issues"},"author":{"name":"@kawanet"},"license":"MIT","homepage":"https://github.com/kawanet/int64-buffer","keywords":["64bit","IEEE-754","arraybuffer","buffer","int","int64","int8array","integer","long","longlong","signed","uint64","unsinged"],"repository":{"type":"git","url":"git+https://github.com/kawanet/int64-buffer.git"},"description":"64bit Long Integer on Buffer/Array/ArrayBuffer in Pure JavaScript","contributors":[{"name":"kawanet","email":"u-suke@kawa.net"},{"name":"pizza2code","email":"christopher.guinnup@jhuapl.edu"},{"name":"Jan Krems","email":"jan.krems@groupon.com"}],"maintainers":[{"name":"kawanet","email":"u-suke@kawa.net"}],"readme":"# int64-buffer\n\n64bit Long Integer on Buffer/Array/ArrayBuffer in Pure JavaScript\n\n[![npm version](https://badge.fury.io/js/int64-buffer.svg)](https://www.npmjs.com/package/int64-buffer)\n[![Node.js CI](https://github.com/kawanet/int64-buffer/workflows/Node.js%20CI/badge.svg?branch=master)](https://github.com/kawanet/int64-buffer/actions/)\n[![Coverage Status](https://coveralls.io/repos/github/kawanet/int64-buffer/badge.svg?branch=master)](https://coveralls.io/github/kawanet/int64-buffer?branch=master)\n[![gzip size](https://img.badgesize.io/https://unpkg.com/int64-buffer/dist/int64-buffer.min.js?compression=gzip)](https://unpkg.com/int64-buffer/dist/int64-buffer.min.js)\n\nJavaScript's number type, based on IEEE-754, can only handle [53 bits](https://en.wikipedia.org/wiki/Double-precision_floating-point_format) of precision.\nThis module provides two pairs of classes: `Int64BE`/`Uint64BE` and `Int64LE`/`Uint64LE`, which can hold 64-bit long integers without losing any bits.\n\n### Features\n\n- `Int64BE`/`Int64LE` for signed integers, `Uint64BE`/`Uint64LE` for unsigned integers.\n- `Int64BE`/`Uint64BE` for big-endian, `Int64LE`/`Uint64LE` for little-endian.\n- `Buffer`/`Uint8Array`/`Array`/`Array`-like storage of 8 bytes length with offset.\n- No mathematical methods provided, such as `add()`, `sub()`, `mul()`, `div()`, etc.\n- Optimized only for 64 bits. If you need Int128, use [bignum](https://www.npmjs.com/package/bignum) or similar libraries.\n- Small. 3KB when minified. No other modules required. Portable pure JavaScript.\n- [Tested](https://github.com/kawanet/int64-buffer/actions/) on node.js v18, v20, v22 and Web browsers.\n\n### Usage\n\n`Int64BE` is the class to host a 64-bit signed long integer `int64_t`.\n\n```js\nimport {Int64BE} from \"int64-buffer\";\n\nconst big = new Int64BE(-1);\n\nconsole.log(big - 0); // -1\n\nconsole.log(big.toBuffer()); // <Buffer ff ff ff ff ff ff ff ff>\n```\n\nIt uses `Buffer` on Node.js and `Uint8Array` on modern Web browsers.\n\n`Uint64BE` is the class to host a 64-bit unsigned positive long integer `uint64_t`.\n\n```js\nimport {Uint64BE} from \"int64-buffer\";\n\nconst big = new Uint64BE(Math.pow(2, 63)); // a big number with 64 bits\n\nconsole.log(big - 0); // 9223372036854776000 = IEEE-754 loses last bits\n\nconsole.log(big + \"\"); // \"9223372036854775808\" = perfectly correct\n```\n\n`Int64LE` and `Uint64LE` work the same way as above but with little-endian storage.\n\n### Input Constructor\n\n- new Uint64BE(number)\n\n```js\nconst big = new Uint64BE(1234567890);\nconsole.log(big - 0); // 1234567890\n```\n\n- new Uint64BE(high, low)\n\n```js\nconst big = new Uint64BE(0x12345678, 0x9abcdef0);\nconsole.log(big.toString(16)); // \"123456789abcdef0\"\n```\n\n- new Uint64BE(string, radix)\n\n```js\nconst big = new Uint64BE(\"123456789abcdef0\", 16);\nconsole.log(big.toString(16)); // \"123456789abcdef0\"\n```\n\n- new Uint64BE(buffer)\n\n```js\nconst buffer = Buffer.from([1,2,3,4,5,6,7,8]);\nconst big = new Uint64BE(buffer);\nconsole.log(big.toString(16)); // \"102030405060708\"\n```\n\n- new Uint64BE(uint8array)\n\n```js\nconst uint8array = new Uint8Array([1,2,3,4,5,6,7,8]);\nconst big = new Uint64BE(uint8array);\nconsole.log(big.toString(16)); // \"102030405060708\"\n```\n\n- new Uint64BE(arraybuffer)\n\n```js\nconst arraybuffer = (new Uint8Array([1,2,3,4,5,6,7,8])).buffer;\nconst big = new Uint64BE(arraybuffer);\nconsole.log(big.toString(16)); // \"102030405060708\"\n```\n\n- new Uint64BE(array)\n\n```js\nconst array = [1,2,3,4,5,6,7,8];\nconst big = new Uint64BE(array);\nconsole.log(big.toString(16)); // \"102030405060708\"\n```\n\n- new Uint64BE(buffer, offset)\n\n```js\nconst buffer = Buffer.from([1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16]);\nconst big = new Uint64BE(buffer, 8);\nconsole.log(big.toString(16)); // \"90a0b0c0d0e0f10\"\n```\n\n- new Uint64BE(buffer, offset, number)\n\n```js\nconst buffer = Buffer.from(16);\nconst big = new Uint64BE(buffer, 8, 0x1234567890);\nconsole.log(big.toString(16)); // \"1234567890\"\nconsole.log(buffer[15].toString(16)); // \"90\"\n```\n\n- new Uint64BE(buffer, offset, high, low)\n\n```js\nconst buffer = new Uint8Array(16);\nconst big = new Uint64BE(buffer, 8, 0x12345678, 0x9abcdef0);\nconsole.log(big.toString(16)); // \"123456789abcdef0\"\nconsole.log(buffer[15].toString(16)); // \"f0\"\n```\n\n- new Uint64BE(buffer, offset, string, radix)\n\n```js\nconst buffer = new Array(16);\nconst big = new Uint64BE(buffer, 8, \"123456789abcdef0\", 16);\nconsole.log(big.toString(16)); // \"123456789abcdef0\"\nconsole.log(buffer[15].toString(16)); // \"f0\"\n```\n\n### Output Methods\n\n- valueOf()\n\n```js\nconst big = new Uint64BE(1234567890);\nconsole.log(big - 0); // 1234567890\n```\n\n- toNumber()\n\n```js\nconst big = new Uint64BE(1234567890);\nconsole.log(big.toNumber()); // 1234567890\n```\n\n- toString(radix)\n\n```js\nconst big = new Uint64BE(0x1234567890);\nconsole.log(big.toString()); // \"78187493520\"\nconsole.log(big.toString(16)); // \"1234567890\"\n```\n\n- toBuffer()\n\n```js\nconst big = new Uint64BE([1,2,3,4,5,6,7,8]);\nconsole.log(big.toBuffer()); // <Buffer 01 02 03 04 05 06 07 08>\n```\n\n- toArrayBuffer()\n\n```js\nconst big = new Uint64BE(0);\nconst buf = new Int8Array(big.toArrayBuffer());\nconsole.log(buf); // Int8Array { '0': 1, '1': 2, '2': 3, '3': 4, '4': 5, '5': 6, '6': 7, '7': 8 }\n```\n\n- toArray()\n\n```js\nconst big = new Uint64BE([1,2,3,4,5,6,7,8]);\nconsole.log(big.toArray()); // [ 1, 2, 3, 4, 5, 6, 7, 8 ]\n```\n\n### Browsers Build\n\n- https://cdn.jsdelivr.net/npm/int64-buffer/dist/int64-buffer.min.js\n\n```html\n<meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\">\n<script src=\"https://cdn.jsdelivr.net/npm/int64-buffer/dist/int64-buffer.min.js\"></script>\n<script>\n\n  const i = new Int64BE(\"1234567890123456789\");\n  console.log(i.toString(10)); // \"1234567890123456789\"\n  \n  const u = new Uint64BE([0x01, 0x23, 0x45, 0x67, 0x89, 0xAB, 0xCD, 0xEF]);\n  console.log(u.toString(16)); // \"123456789abcdef\"\n\n</script>\n```\n\n### Links\n\n- https://github.com/kawanet/int64-buffer\n- https://www.npmjs.com/package/int64-buffer\n\n### The MIT License (MIT)\n\nCopyright (c) 2015-2024 Yusuke Kawasaki\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n","readmeFilename":"README.md"}